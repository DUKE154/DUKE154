
Create virtual environment
1.	python -m venv virtual 
	.\virtual\Scripts\activate

2. install django
	django-admin OR python manage.py startproject greatkart
------------------------------------------------------------------	
	in urls.py
from django.contrib import admin
from django.urls import path
from . import views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('',views.home,name='home'),
]
---------------------------------------------------------
3.	In views.py 

from django.shortcuts import render

def home(request):
    return render(request,'home.html')
    
-----------------------------------------------------------
Templates 
Templates doesnot exist 

 In setting.py 
 DIR :[r'path of the file ']



For home.html 
Create folder name Templates (put all the html files )
{
home.html -check by using simple html tags
copy templates
base.html 
-------------------------------------------------------------------



create folder includes
navbar.html
-<!-- navbar -->
{% include 'includes/navbar.html' %}

{% block content %}
<!-- content -->
{% endblock %}

<!-- footer -->
{% include 'includes/footer.html' %}
footer.html-
}
------------------------------------------------------------
For css

Create static folder 					bottom of settting.py
add folder admin,css,image,js,fonts


STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR /'static'
STATICFILES_DIRS = [
    'greatkart/static', 
   
]

copy karne ke liye kuch karna padta he 		python manage.py collectstatic
{% static 'images/banners/1.jpg' %} 						har jagah karna
{% load static %}				har starting page

home.html



base.html
body tak copy karna home.html se 

<!-- navbar -->
{% include 'includes/navbar.html' %}

{% block content %}
<!-- content -->
=----------------------------------------------------------------
python manage.py startapp appname(category)		 'category.apps.CategoryConfig',	in settings.py
models is created 

in admin.py
from .models import Category

python manaage.py makemigrations
python manage.py migrate
----------------------------------------------------------------------------------------------------
accounts app is created					'accounts.apps.AccountsConfig',		in settings.py
models is created
edit admin.py
delete sqlite3 or existing content
makemigrations -> migrate->runserver
---------------------------------------------------------------------------------------------=----------



# Register your models here.
admin.site.register(Category)

{% endblock %}

<!-- footer -->
{% include 'includes/footer.html' %}
-------------------------------------------------------------------
for media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR /'media'   in settings.py

add  -------------------------------> In urls.py
		
from django.conf.urls.static import static
from django.conf import settings
from . import views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('',views.home,name='home'),
] + static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)

slug = models.SlugField(max_length=100, unique=True)                    in models.py


in admin.py
class CategoryAdmin(admin.ModelAdmin):
    prepopulated_fields = {'slug':('category_name',)}
    list_display = ('category_name','slug')


admin.site.register(Category, CategoryAdmin)
-------------------------------------------------------------------------------------
create store app		mention in settings.py
create models.py
edit admin.py 

class ProductAdmin(admin.ModelAdmin):
    prepopulated_fields = {'slug':('product_name',)}
    list_display = ('product_name','price','stock','category','modified_date','is_available')
admin.site.register(Product,ProductAdmin)

python manage.py makemigrations			1 hr error liya tha,kuch nhi kiya seperate kar kar migration kiya
python manage.py migrate
product detail add kiye

templates me changes kiya 
home.html
me div delete ki
{% for product in products %}
{{product.product_name}},price,image.url
{%end for%}


in views.py
from store.models import Product
def home(request):
    products = Product.objects.all().filter(is_available=True)

    context = {
        'products':products
    }

    return render(request,'home.html',context)

in store views.py
from .models import Product
# Create yo;ur views here.
def store(request):
    products = Product.objects.all().filter(is_available=True)
    product_count = products.count()

    context = {
        'products':products,
        'product_count':product_count,
    }
    return render(request,'store/store.html', context)

			create store folder store.html in templates
me div delete ki
{% for product in products %}
{{product.product_name}},price,image.url
{%end for%}
btn primary		product_count is used to count  {{product_count}}
--------------------------------------------------------------------------------------
 path('store/',include('store.urls')),				in urls.py main app
 path('',views.store,name='store'),

 path('<slug:category_slug>/',views.store,name='product_by_category'),		in urls.py  in store

    if category_slug != None:							in views.py in store
        categoies = get_object_or_404(Category,slug=category_slug)
        products = Product.objects.filter(category=categoies, is_available = True)    
        product_count = products.count()
    else:
        products = Product.objects.all().filter(is_available=True)
        product_count = products.count()
-----------------------------------------------------------------------------------
how to add category

create context_preprocessor.py in category
from .models import Category

def menu_link(request):
    links = Category.objects.all()
    return dict(links = links)

'category.context_processor.menu_link',				in settings.py

 {% for category in links %}
                    <a class="dropdown-item" href="#">{{ category.category_name}} </a>		in navbar
                {% endfor %}

--------------------------------------------------------------------------------------------
 <a class="dropdown-item" href="{{category.get_url}}">{{ category.category_name}} </a>			in navbar


    def get_url(self):
        return reverse('product_by_category', args=[self.slug])					in category.models    from django.urls import reverse 
------------------------------------------------------------------------------------------------------------------------
{%for category in links%}  
                    <ul class="list-menu">
                    <li><a href="{{category.get_url}}">{{ category.category_name}} </a></li>
                   {%endfor%} 										in store.html
----------------------------------------------------------------------------------------------------------------------------
<ul class="list-menu"> 
                        <li><a href="{% url 'store' %}">All products </a></li>
                   {%for category in links%}  
                     <li><a href="{{category.get_url}}">{{ category.category_name}} </a></li>		in store.html
                   {%endfor%} 
                    </ul>				

 <div class="dropdown-menu">
                    <a class="dropdown-item" href="{% url 'store' %}">All products </a>			in navbar.html
                
                 
----------------------------------------------------------------------------------------------------------------------------------
 path('<slug:category_slug>/<slug:product_slug>/',views.product_detail,name='product_detail'),			in urls.py of store

def product_detail(request, category_slug, product_slug):						in views.py
    return render(request, 'store/product_detail.html')
					
create product_detail.html			by copy  product_detail.html 139-245
-----------------------------------------------------------------------------------------------------------------------------------------
SINGLE PRODUCT VIEW



dynamic product title is not working
{{single_product.product_name}}		in product detail.html

STORE $ HOMEPAGE
in navbar.html
{% url 'home' %}		{% url 'store' %}	single product page or name nhi kiya 	
cover photo









